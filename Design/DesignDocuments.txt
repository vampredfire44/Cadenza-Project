DESIGN DOCUMENTS


CADENZA is a fun, motivational music theory game that encourages users to learn about cadences and chord progressions in an interactive way. 


The way that my code tries to solve this problem is that it provides a randomly generated song based on Markov Chains that includes a group of missing chords. The user can adjust the level of difficulty by inputting the number of missing chords, the key signature, and the time signature. The user then can listen to the song if they want to identify the chord using their auditory skills. They can also choose not to play the music and simply look at the transcription of the song to identify the missing chord based on their knowledge of chord progressions. If they are stuck, they can easily go switch back and forth between the cadence reference sheet and the game at the click of a button. Once they have a guess, the user can build the chord by clicking on the places on the staff that they want a note to appear, and then check if they are correct. If they are in beginner mode, an accidental inversion, a chord that still sounds harmonious, is still counted as correct and in fact, gives them bonus points for creativity. The program can tell what type of inversion it is, so even if they do not know inversions, the user can learn them through trial and error. If they make a mistake, they can re-edit their chord so that they learn from their mistakes. 


Using Pydub, I was able to also add a fun feature called “Jazzify,” which basically turns any randomly generated song in that key and molds it into a common jazz motif. Every time you click “Jazzify” and then “Play,” the user will hear a jazz motif different from the last. 


The overall design of CADENZA is sleek and simple as not to distract from the music. The user interface is also handy for user customization of the game as well as for being able to have an on-hand reference to cadences and chord progressions. The user can easily create chords and check if they are correct, as well as undo if they make a mistake, as well as make new songs if they get stuck. While I was working on the project, I referenced other games such as Cadence, which had a similarly sleek design that focused on the music and had a similar puzzle component. I liked how their puzzle was based on listening to how the song sounded, so I added that auditory element to my project. However, while Cadence did not display the actual music notes, I decided that it was imperative that the user not only be able to auditorily distinguish cadences, but also that they needed to learn to visually recognize the chords by actually creating them.